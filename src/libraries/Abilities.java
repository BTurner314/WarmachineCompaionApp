package libraries;

public class Abilities {

	private String name;
	private String abilityText;	

	public Abilities(String name, String abilityText) {
		this.name = name;
		this.abilityText = abilityText;
	}
	public static rules.Animosity animosityMorrowThamarite = new rules.Animosity("Animosity[Morrowan or Thamarite Models]", "This model cannot be part of an army that includes Morrowan or Thamarite models.", "Morrowan Thamarite");
	public static rules.StarAttack arcaneBolt = new rules.StarAttack("Arcane Bolt", "12", 11, "Magic attack.");
	public static Abilities ashenVeil = new libraries.Abilities("Ashen Veil", "This model has concealment. Living enemy models without Immunity:Fire suffer -2 to attack rolls while within 2in of this model.");
	public static Abilities assault = new libraries.Abilities("Assault", "A model with the Assault advantage can make one ranged attack as part of a charge during its activation. This ranged attack must occur after the model ends its movement but before it begins its Combat Action and must target the model charged. A model that begins a charge in melee cannot make an Assault ranged attack as part of that charge. If the target is not in the charging model's melee range after ending its movement, the charge fails, but the model with Assault can still make the Assault ranged attack before its activation ends. A model can make an Assault ranged attack while in melee.");
	public static rules.Attachment attachmentHolyZealots = new rules.Attachment("Attachment[Holy Zealots]", "Holy Zealot", "This attachment can be added to a Holy Zealot unit");
	public static rules.StarAction battle = new rules.StarAction("Battle", "3", "The warjack gains +2 to damage rolls. Battle lasts for one turn.");
	public static Abilities battlegroupController = new libraries.Abilities("Battlegroup Controller", "This model is not a warcaster but has the following warcaster special rules: Battlegroup Commander, Focus Manipulation, Power Field, and Spellcaster. This model must have at least one warjack in its battlegroup at the start of the game.");
	public static Abilities braceForImpact = new Abilities("Brace for Impact", "This model is not moved when slammed.");
	public static Abilities cavalry = new libraries.Abilities("Cavalry", "A cavalry model using its Combat Action for melee attacks can make one initial attack with its Mount just as with any other melee weapons. Cavalry models gain boosed charge attack rolls. A cavalry model cannot make an initial melee attack with its Mount during an activation it charged. Instead, a charging cavalry model uses its Mount to make impact attacks. If a charging cavalry model contacts another model during its charge movement and has moved at least 3in, it can stop and make impact attacks with its Mount against all models in the Mount's melee range. The cavalry models makes these attacks even if it is out of formation. Impact attack and damage rolls cannot be boosted. Impact attacks are simultaneous. After resolving the impact attacks, the charging cavalry model resumes its charge movement. The charging model does not resume its movement if it is pushed, slammed, thrown, or placed while it was stopped. It cannot make further impact attacks during this charge. If the cavalry model chooses to make an impact attack against its charge target, before making any impact attacks the model turns to face the charge target and its charge movement ends. If the impact attack destroys the charge target, it does not result in a failed charge.");
	public static Abilities construct = new Abilities("Construct", "This model is a construct and is not a living model.");
	public static Abilities directSpirits = new libraries.Abilities("Direct Spirits", "When a friendly living Faction warrior model is destroyed in this model's command range and generates a soul token, you choose which model with the Soul Taker ability gains the destroyed model's soul, regardless of the proximity of other models. Enemy models are not eligible to gain soul tokens from models destroyed in this model's command range.");
	public static Abilities divineInspiration = new libraries.Abilities("Divine Inspiration", "This model gains an additional die on melee attack and melee damage rolls. Discard the lowest die of each roll.");
	public static Abilities divineManifestation = new libraries.Abilities("Divine Manifestation", "This model is not a living model, cannot become knocked down, and never suffers Blind. Opponents cannot take control of this model.");
	public static rules.StarAction empower = new rules.StarAction("Empower", "CMD", "Target friendly Faction warjack. If the target warjack is in range and it was suffering Disruption, it is no longer disrupted. The warjack also gains 1 focus point.");
	public static rules.EliteCadre eliteCadrePaladinOfTheOrderOfTheWall = new rules.EliteCadre("Elite Cadre[Paladin of the Order of the Wall]", "Paladin of the Order of the Wall", "Friendly Paladin of the Order of the Wall models gain Righteous Vengeance.");
	public static rules.StarAction enliven = new rules.StarAction("Enliven", "CMD", "Target friendly Faction warjack. If the warjack is in range, the next time it suffers damage from an enemy attack while it is not advancing, immediately after the attack is resolvved the warjack can make a full advance, then Enliven expires. Enlivven lasts for one round.");
	public static Abilities exorcist = new libraries.Abilities("Exorcist", "While within 10in of this model, enemy models lose Incorporeal");
	public static Abilities fervor = new libraries.Abilities("Fervor", "Affected models gain +2 to damage rolls this activation.");
	public static Abilities flight = new libraries.Abilities("Flight", "This model treats all non-impassable terrain as open terrain while advancing. It can advance through obstructions and other models if it has enough movement to move completely past them. While charging, slam power attacking, or trample power attacking, this model does not stop its movement when it contacts an obstacle, an obstruction, or another model. This model ignores intervening models when declaring its charge target. While knocked down or stationary, this model loses Flight. ");
	public static rules.FieldMarshal fmtrueSight = new rules.FieldMarshal("Field Marshal[True Sight]", "Warjacks in this model's battlegroup gain True Sight.");
	public static Abilities fuelForTheFlames = new libraries.Abilities("Fuel for the Flames", "When a model suffers a fire damage roll while within 5in of this model, add +2 to the roll.");
	public static Abilities girded = new libraries.Abilities("Girded", "This model and firendly models B2B with it do not suffer blast damage.");
	public static Abilities graveResonance = new libraries.Abilities("Grave Resonance", "This model can spend a soul token at any time during its activation to give one friendly Faction warjack within 5in of it 1 focus point.");
	public static rules.MiniFeat greaterDestiny = new rules.MiniFeat("Greater Destiny", "This model can use Greater Destiny once per game at the start of its unit's activation. Immediately return all models to this unit that were destroyed during your opponent's last turn to play. Place them competeley within 3in of this model.");
	public static Abilities holyMonolith = new libraries.Abilities("Holy Monolith", "When one or more other models in this unit are destroyed by an enemy attack, after the attack is resolved models in this unit gain +4ARM for one turn. Models are not affected while out of formation.");
	public static rules.StarAction hymm = new rules.StarAction("Hymm", "3", "Target friendly Faction warjack. Wehn a model in this unit performs a Hymm special action, choose a hymm. Each activation, all models in this unit performing a hymm must perform the same one. A warjack can be affected by only one hymn at a time.");
	public static Abilities immunityFire = new libraries.Abilities("Immunity: Fire", "This model is immune to Fire Damage."); 
	public static Abilities ironSentinel = new libraries.Abilities("Iron Sentinel", "While B2B with a friendly Faction warjack, this model gains +2DEF and ARM and cannot become knocked down.");
	public static rules.Leadership leadershipPaladin = new rules.Leadership("Leadership[Paladin]", "Paladin", "While in this model's command range, friendly Paladin models gain Girded.");
	public static rules.partisan partisanProtectorate = new rules.partisan("Partisan[Protectorate]", "When included in a Protectorate army, this model is a Protectorate model instead of a Mercenary model.", "Protectorate");
	public static rules.StarAction passage = new rules.StarAction("Passage", "3", "The warjack cannot be target by non magical ranged attacks. Passage lasts for one round.");
	public static Abilities pathOfFlames = new libraries.Abilities("Path of Flames", "Affected models gain Immunity:Fire for one round. Models are not affected while out of formation.");
	public static Abilities prayers = new libraries.Abilities("Prayers", "The Leader can use one of the following prayers at any time during each of its unit's activations. Each model in this unit gains the benefirs listed.");
	public static rules.StarAction repaird31 = new rules.StarAction("Repair[d3+1]", "B2B", "Target friendly Faction construct model. If the model is in range, remove d3+1 damage points from it.");
	public static Abilities reposition3 = new libraries.Abilities("Reposition[3]", "At the end of the activation in which it did not run or fail a charge, this model can advance up to 3in, then its activation ends.");
	public static Abilities retaliatoryStrike = new Abilities("Retaliatory Strike", "If this model is hit by a melee attack made by an enemy model during your opponent's turn,"
			+ "after that attack is resolved this model can immediately make one basic melee attack against that model. This model can make only one Retaliatory Strike per turn.");
	public static Abilities righteousFury = new libraries.Abilities("Righteous Fury", "When one or more friendly Faction warrior models are destroyed by an enemy attack while in this model's command range, this model gains +2 STR and ARM for one round.");
	public static Abilities shieldGuard = new libraries.Abilities("Shield Guard", "Once per round, when a friendly model is directly hit by a non-spray ranged attack during your opponent's turn while within 3in of this model, you can choose to have this model directly hit instead. This model is automatically hit and suffers all damage and effects. This model cannot use Shield Guard while it is incorporeal, knocked down, or stationary.");
	public static rules.StarAction shielding = new rules.StarAction("Shielding", "3", "The warjack cannot be targeted by enemy spells. Shielding lasts for one round.");
	public static Abilities soulPowered = new libraries.Abilities("Soul-Powered", "During its Combat Action, this model can spend soul tokens to make additional melee attacks. It can make one additional attack for each token spent.");
	public static Abilities soulTakerCenotaph = new libraries.Abilities("Soul Taker:Cenotaph", "This model can gain souls. When a friendly living Faction model is destroyed within 5in of this model, this model gains the destroyed model's soul token. This model can have up to five soul tokans at any time. At the start of this model's activation, you can remove soul tokens from this model to give it 1 focus point for each token removed.");
	public static Abilities soulTakerGatekeeper = new libraries.Abilities("Soul Taker:Gatekeeper", "This model can gain soul tokens. When a friendly living Faction model is destroyed while in this model's command range, this model gains the destroyed model's soul token. This model can have up to three soul tokens at any time. This model can spend soul tokens for the following:");
	public static Abilities soulWard = new libraries.Abilities("Soul Ward", "Enemy models cannot gain soul tokens from friendly models destroyed in this model's command range.");
	public static Abilities steady = new libraries.Abilities("Steady", "This model cannot become knocked down.");
	public static Abilities stoneAndMortarStance = new libraries.Abilities("Stone-and-Mortar Stance", "During its activation, this model can forfeit its Normal Movement or Combat Action to gain +5ARM. The affected model cannot become knocked down. Stone-and-Mortar Stance lasts for one round.");
	public static Abilities strengthOfDeath = new libraries.Abilities("Strength of Death", "During its Combat Action, this model can spend soul tokens to boost one attack or damage roll for each token spent.");
	public static Abilities sturdy = new Abilities("Sturdy", "This model cannot be pushed.");
	public static Abilities swiftVengeance = new libraries.Abilities("Swift Vengeance", "If one or more friendly warrior models were destroed or removed from play by enemy attacks while within 5in of this model during your opponent's last turn, during your Maintenance Phase this model can advance 3in and make one basic melee attack.");
	public static Abilities tough = new libraries.Abilities("Tough", "When this model is disabled, roll a d6. On a 5 or 6, remove 1 damage point from this model; it is no longer disabled and becomes knocked down. While knocked down, this model loses Tough.");
	public static Abilities trueSight = new Abilities("True Sight", "This model ignores cloud effects when determining LOS. This model also ignores Stealth.");
	public static Abilities warding = new libraries.Abilities("Warding", "Affected models cannot be targeted by enemy spells for one round. Models are not affected while out of formation.");
}
